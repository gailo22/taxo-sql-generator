{"version":3,"sources":["D:/dev/project/git/taxo-sql-gen-app/src/$_lazy_route_resource lazy","D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.css","D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.html","D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/app.module.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.css","D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.html","D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/display.service.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.css","D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.html","D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/fileupload.service.ts","D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.css","D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.html","D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.ts","D:/dev/project/git/taxo-sql-gen-app/src/environments/environment.ts","D:/dev/project/git/taxo-sql-gen-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar>{{title}}</mat-toolbar>\\n\\n<mat-tab-group>\\n  <mat-tab label=\\\"Classified\\\">\\n    <app-classified></app-classified>\\n  </mat-tab>\\n  <mat-tab label=\\\"Not Classified\\\">\\n    <app-notclassified></app-notclassified>\\n  </mat-tab>\\n</mat-tab-group>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Taxo SQL generator';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n// import { FlexLayoutModule } from '@angular/flex-layout'\nimport { MatButtonModule } from '@angular/material'\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { AppComponent } from './app.component';\n\nimport 'hammerjs';\n\nimport { ClassifiedComponent } from './classified/classified.component';\nimport { NotclassifiedComponent } from './notclassified/notclassified.component';\nimport { DisplayComponent } from './display/display.component';\n\nimport { FileuploadService } from './fileupload.service'\nimport { DisplayService } from './display.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClassifiedComponent,\n    NotclassifiedComponent,\n    DisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    ClipboardModule\n  ],\n  providers: [FileuploadService, DisplayService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.css\n// module id = ../../../../../src/app/classified/classified.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <input type=\\\"file\\\" id=\\\"input-file-before\\\"\\n  (change)=\\\"fileEvent($event)\\\">\\n  <button mat-raised-button\\n  (click)=\\\"uploadFile()\\\">Upload</button>\\n  <button mat-raised-button\\n  (click)=\\\"reset()\\\">Reset</button>\\n</mat-card>\\n\\n<mat-card>\\n  <mat-spinner *ngIf=\\\"showSpinner\\\"></mat-spinner>    \\n  <app-display *ngIf=\\\"!showSpinner\\\"></app-display>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.html\n// module id = ../../../../../src/app/classified/classified.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { FileuploadService } from '../fileupload.service';\nimport { DisplayService } from '../display.service';\n\n@Component({\n  selector: 'app-classified',\n  templateUrl: './classified.component.html',\n  styleUrls: ['./classified.component.css']\n})\nexport class ClassifiedComponent implements OnInit {\n\n  showSpinner = false;\n  fileSelected: File;\n\n  constructor(\n    private fileuploadService: FileuploadService,\n    private displayService: DisplayService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  fileEvent($event): void {\n    this.fileSelected = $event.target.files[0];\n  }\n\n  uploadFile(): void {\n    this.showSpinner = true;\n    setTimeout(() => {\n      this.showSpinner = false;\n\n      console.log(this.fileSelected);\n      this.fileuploadService.uploadClassifiedFile(this.fileSelected)\n      .subscribe( (response) => {\n         console.log('set any success actions...');\n         this.displayService.setResult(response.data);\n         return response;\n       },\n       (error) => {\n          console.log('set any error actions...');\n          this.displayService.setResult(error.message);\n        });\n\n    }, 2000);\n  }\n\n  reset(): void {\n    console.log('reset');\n    this.displayService.setResult('');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/classified/classified.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class DisplayService {\n\n  listners = new Subject<any>();\n  \n  listen(): Observable<any> {\n      return this.listners.asObservable();\n  }\n\n  constructor() { }\n\n  setResult(result) {\n    this.listners.next(result);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/display.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-icon {\\r\\n    cursor: pointer;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.css\n// module id = ../../../../../src/app/display/display.component.css\n// module chunks = main","module.exports = \"<mat-icon class=\\\"mat-icon material-icons\\\" role=\\\"img\\\" aria-hidden=\\\"true\\\"\\n(click)=\\\"copyToClipboard()\\\"  \\nngxClipboard  [cbContent]=\\\"response\\\" \\n>content_copy</mat-icon>\\n\\n<p>\\n  {{response}}\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.html\n// module id = ../../../../../src/app/display/display.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\nimport { DisplayService } from '../display.service';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent implements OnInit {\n\n  response: string = '';\n\n  constructor(\n    private displayService: DisplayService,\n    public snackBar: MatSnackBar\n  ) { \n    this.displayService.listen().subscribe((m:any) => {\n      this.response = m;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  copyToClipboard(): void {\n    this.snackBar.open('Copied', '', {\n      duration: 2000,\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/display/display.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { UploadResponse } from './uploadresponse'\n\n@Injectable()\nexport class FileuploadService {\n\n  private classifiedUrl = '/api/v1/classified';\n  private notClassifiedUrl = '/api/v1/notclassified';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  uploadClassifiedFile(fileToUpload: File): Observable<UploadResponse> {\n    const _formData = new FormData();\n    _formData.append('file', fileToUpload, fileToUpload.name);   \n    return this.http.post<any>(this.classifiedUrl, _formData);\n  }\n\n  uploadNotClassifiedFile(fileToUpload: File): Observable<UploadResponse> {\n    const _formData = new FormData();\n    _formData.append('file', fileToUpload, fileToUpload.name);   \n    return this.http.post<any>(this.notClassifiedUrl, _formData);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/fileupload.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.css\n// module id = ../../../../../src/app/notclassified/notclassified.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <input type=\\\"file\\\" id=\\\"input-file-before\\\"\\n    (change)=\\\"fileEvent($event)\\\">\\n    <button mat-raised-button\\n    (click)=\\\"uploadFile()\\\">Upload</button>\\n    <button mat-raised-button\\n    (click)=\\\"reset()\\\">Reset</button>\\n  </mat-card>\\n\\n<mat-card>\\n  <mat-spinner *ngIf=\\\"showSpinner\\\"></mat-spinner>    \\n  <app-display *ngIf=\\\"!showSpinner\\\"></app-display>\\n  </mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.html\n// module id = ../../../../../src/app/notclassified/notclassified.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { FileuploadService } from '../fileupload.service';\nimport { DisplayService } from '../display.service';\n\n@Component({\n  selector: 'app-notclassified',\n  templateUrl: './notclassified.component.html',\n  styleUrls: ['./notclassified.component.css']\n})\nexport class NotclassifiedComponent implements OnInit {\n\n  showSpinner = false;\n  fileSelected: File;\n\n  constructor(\n    private fileuploadService: FileuploadService,\n    private displayService: DisplayService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  fileEvent($event): void {\n    this.fileSelected = $event.target.files[0];\n  }\n\n  uploadFile($event): void {\n    this.showSpinner = true;\n    setTimeout(() => {\n      this.showSpinner = false;\n\n      console.log(this.fileSelected);\n      this.fileuploadService.uploadNotClassifiedFile(this.fileSelected)\n      .subscribe( (response) => {\n         console.log('set any success actions...');\n         this.displayService.setResult(response.data);\n         return response;\n       },\n       (error) => {\n          console.log('set any error actions...');\n          this.displayService.setResult(error.message);\n        });\n\n    }, 2000);\n  }\n\n  reset(): void {\n    console.log('reset');\n    this.displayService.setResult('');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/app/notclassified/notclassified.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/dev/project/git/taxo-sql-gen-app/src/main.ts"],"sourceRoot":"webpack:///"}